<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="518.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="501" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="501" > </text>
<g id="frames">
<g >
<title>mlx5e_ethtool_get_link_ksettings (14,162,664 samples, 0.16%)</title><rect x="27.5" y="213" width="1.8" height="15.0" fill="rgb(252,188,30)" rx="2" ry="2" />
<text  x="30.46" y="223.5" ></text>
</g>
<g >
<title>get_page_from_freelist (13,439,737 samples, 0.15%)</title><rect x="39.6" y="245" width="1.8" height="15.0" fill="rgb(221,91,54)" rx="2" ry="2" />
<text  x="42.61" y="255.5" ></text>
</g>
<g >
<title>rte_mempool_obj_iter (17,139,255 samples, 0.19%)</title><rect x="29.3" y="421" width="2.3" height="15.0" fill="rgb(246,181,23)" rx="2" ry="2" />
<text  x="32.33" y="431.5" ></text>
</g>
<g >
<title>__queue_work (14,162,664 samples, 0.16%)</title><rect x="27.5" y="101" width="1.8" height="15.0" fill="rgb(210,68,43)" rx="2" ry="2" />
<text  x="30.46" y="111.5" ></text>
</g>
<g >
<title>unmap_single_vma (13,153,138 samples, 0.15%)</title><rect x="44.8" y="309" width="1.7" height="15.0" fill="rgb(216,4,29)" rx="2" ry="2" />
<text  x="47.79" y="319.5" ></text>
</g>
<g >
<title>mlx5_query_pfcc_reg.constprop.0 (14,162,664 samples, 0.16%)</title><rect x="27.5" y="181" width="1.8" height="15.0" fill="rgb(226,52,39)" rx="2" ry="2" />
<text  x="30.46" y="191.5" ></text>
</g>
<g >
<title>ib_uverbs_create_cq (18,126,144 samples, 0.20%)</title><rect x="12.1" y="261" width="2.3" height="15.0" fill="rgb(248,15,48)" rx="2" ry="2" />
<text  x="15.05" y="271.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (24,710,984 samples, 0.28%)</title><rect x="36.4" y="357" width="3.2" height="15.0" fill="rgb(251,174,41)" rx="2" ry="2" />
<text  x="39.35" y="367.5" ></text>
</g>
<g >
<title>page_fault (39,335,213 samples, 0.44%)</title><rect x="39.6" y="389" width="5.2" height="15.0" fill="rgb(248,191,33)" rx="2" ry="2" />
<text  x="42.61" y="399.5" ></text>
</g>
<g >
<title>update_blocked_averages (6,552,847 samples, 0.07%)</title><rect x="46.5" y="85" width="0.9" height="15.0" fill="rgb(207,192,9)" rx="2" ry="2" />
<text  x="49.52" y="95.5" ></text>
</g>
<g >
<title>callout_callwheel_init (39,335,213 samples, 0.44%)</title><rect x="39.6" y="405" width="5.2" height="15.0" fill="rgb(250,133,53)" rx="2" ry="2" />
<text  x="42.61" y="415.5" ></text>
</g>
<g >
<title>newidle_balance (6,552,847 samples, 0.07%)</title><rect x="46.5" y="101" width="0.9" height="15.0" fill="rgb(222,1,20)" rx="2" ry="2" />
<text  x="49.52" y="111.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (13,153,138 samples, 0.15%)</title><rect x="44.8" y="277" width="1.7" height="15.0" fill="rgb(248,116,53)" rx="2" ry="2" />
<text  x="47.79" y="287.5" ></text>
</g>
<g >
<title>queue_work_on (14,162,664 samples, 0.16%)</title><rect x="27.5" y="117" width="1.8" height="15.0" fill="rgb(210,221,7)" rx="2" ry="2" />
<text  x="30.46" y="127.5" ></text>
</g>
<g >
<title>__vfs_read (24,738,301 samples, 0.28%)</title><rect x="24.2" y="325" width="3.3" height="15.0" fill="rgb(206,228,54)" rx="2" ry="2" />
<text  x="27.20" y="335.5" ></text>
</g>
<g >
<title>ib_umem_get (18,126,144 samples, 0.20%)</title><rect x="12.1" y="197" width="2.3" height="15.0" fill="rgb(207,190,24)" rx="2" ry="2" />
<text  x="15.05" y="207.5" ></text>
</g>
<g >
<title>__handle_mm_fault (6,581,990 samples, 0.07%)</title><rect x="22.5" y="325" width="0.8" height="15.0" fill="rgb(244,13,12)" rx="2" ry="2" />
<text  x="25.47" y="335.5" ></text>
</g>
<g >
<title>_callout_init_lock (10,434,085 samples, 0.12%)</title><rect x="10.7" y="389" width="1.4" height="15.0" fill="rgb(235,90,54)" rx="2" ry="2" />
<text  x="13.68" y="399.5" ></text>
</g>
<g >
<title>seq_vprintf (24,671,563 samples, 0.28%)</title><rect x="24.2" y="245" width="3.3" height="15.0" fill="rgb(230,85,36)" rx="2" ry="2" />
<text  x="27.21" y="255.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (14,162,664 samples, 0.16%)</title><rect x="42.9" y="229" width="1.9" height="15.0" fill="rgb(210,205,17)" rx="2" ry="2" />
<text  x="45.92" y="239.5" ></text>
</g>
<g >
<title>sock_ioctl (14,162,664 samples, 0.16%)</title><rect x="27.5" y="309" width="1.8" height="15.0" fill="rgb(206,132,4)" rx="2" ry="2" />
<text  x="30.46" y="319.5" ></text>
</g>
<g >
<title>read (24,738,301 samples, 0.28%)</title><rect x="24.2" y="421" width="3.3" height="15.0" fill="rgb(245,201,27)" rx="2" ry="2" />
<text  x="27.20" y="431.5" ></text>
</g>
<g >
<title>memcpy (24,671,563 samples, 0.28%)</title><rect x="24.2" y="229" width="3.3" height="15.0" fill="rgb(252,228,44)" rx="2" ry="2" />
<text  x="27.21" y="239.5" ></text>
</g>
<g >
<title>__get_user_pages (18,126,144 samples, 0.20%)</title><rect x="36.4" y="309" width="2.3" height="15.0" fill="rgb(213,28,33)" rx="2" ry="2" />
<text  x="39.35" y="319.5" ></text>
</g>
<g >
<title>pick_next_task_fair (6,552,847 samples, 0.07%)</title><rect x="46.5" y="117" width="0.9" height="15.0" fill="rgb(252,159,54)" rx="2" ry="2" />
<text  x="49.52" y="127.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (25,895,476 samples, 0.29%)</title><rect x="41.4" y="277" width="3.4" height="15.0" fill="rgb(227,10,20)" rx="2" ry="2" />
<text  x="44.38" y="287.5" ></text>
</g>
<g >
<title>dev_ethtool (14,162,664 samples, 0.16%)</title><rect x="27.5" y="261" width="1.8" height="15.0" fill="rgb(251,179,19)" rx="2" ry="2" />
<text  x="30.46" y="271.5" ></text>
</g>
<g >
<title>__do_page_fault (39,335,213 samples, 0.44%)</title><rect x="39.6" y="357" width="5.2" height="15.0" fill="rgb(254,32,2)" rx="2" ry="2" />
<text  x="42.61" y="367.5" ></text>
</g>
<g >
<title>__handle_mm_fault (39,335,213 samples, 0.44%)</title><rect x="39.6" y="309" width="5.2" height="15.0" fill="rgb(239,45,21)" rx="2" ry="2" />
<text  x="42.61" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (19,705,985 samples, 0.22%)</title><rect x="44.8" y="405" width="2.6" height="15.0" fill="rgb(254,112,5)" rx="2" ry="2" />
<text  x="47.79" y="415.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (11,732,812 samples, 0.13%)</title><rect x="41.4" y="245" width="1.5" height="15.0" fill="rgb(209,55,20)" rx="2" ry="2" />
<text  x="44.38" y="255.5" ></text>
</g>
<g >
<title>map_sg (18,126,144 samples, 0.20%)</title><rect x="12.1" y="181" width="2.3" height="15.0" fill="rgb(218,45,18)" rx="2" ry="2" />
<text  x="15.05" y="191.5" ></text>
</g>
<g >
<title>alloc_pages_vma (13,439,737 samples, 0.15%)</title><rect x="39.6" y="277" width="1.8" height="15.0" fill="rgb(209,16,48)" rx="2" ry="2" />
<text  x="42.61" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_read (24,738,301 samples, 0.28%)</title><rect x="24.2" y="373" width="3.3" height="15.0" fill="rgb(241,25,6)" rx="2" ry="2" />
<text  x="27.20" y="383.5" ></text>
</g>
<g >
<title>__lru_cache_add (25,895,476 samples, 0.29%)</title><rect x="41.4" y="261" width="3.4" height="15.0" fill="rgb(228,116,36)" rx="2" ry="2" />
<text  x="44.38" y="271.5" ></text>
</g>
<g >
<title>dma_ops_alloc_iova.isra.0 (18,126,144 samples, 0.20%)</title><rect x="12.1" y="165" width="2.3" height="15.0" fill="rgb(218,47,46)" rx="2" ry="2" />
<text  x="15.05" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (24,738,301 samples, 0.28%)</title><rect x="24.2" y="405" width="3.3" height="15.0" fill="rgb(219,30,24)" rx="2" ry="2" />
<text  x="27.20" y="415.5" ></text>
</g>
<g >
<title>unmap_vmas (13,153,138 samples, 0.15%)</title><rect x="44.8" y="325" width="1.7" height="15.0" fill="rgb(249,62,28)" rx="2" ry="2" />
<text  x="47.79" y="335.5" ></text>
</g>
<g >
<title>free_unref_page_commit (6,575,998 samples, 0.07%)</title><rect x="45.7" y="197" width="0.8" height="15.0" fill="rgb(232,57,53)" rx="2" ry="2" />
<text  x="48.66" y="207.5" ></text>
</g>
<g >
<title>__sched_text_start (6,552,847 samples, 0.07%)</title><rect x="46.5" y="133" width="0.9" height="15.0" fill="rgb(216,139,48)" rx="2" ry="2" />
<text  x="49.52" y="143.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (6,577,140 samples, 0.07%)</title><rect x="44.8" y="229" width="0.9" height="15.0" fill="rgb(230,43,22)" rx="2" ry="2" />
<text  x="47.79" y="239.5" ></text>
</g>
<g >
<title>ksys_read (24,738,301 samples, 0.28%)</title><rect x="24.2" y="357" width="3.3" height="15.0" fill="rgb(218,1,36)" rx="2" ry="2" />
<text  x="27.20" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (18,126,144 samples, 0.20%)</title><rect x="12.1" y="357" width="2.3" height="15.0" fill="rgb(252,81,18)" rx="2" ry="2" />
<text  x="15.05" y="367.5" ></text>
</g>
<g >
<title>do_page_fault (39,335,213 samples, 0.44%)</title><rect x="39.6" y="373" width="5.2" height="15.0" fill="rgb(241,78,34)" rx="2" ry="2" />
<text  x="42.61" y="383.5" ></text>
</g>
<g >
<title>all (8,956,423,570 samples, 100%)</title><rect x="10.0" y="469" width="1180.0" height="15.0" fill="rgb(212,122,17)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (6,575,998 samples, 0.07%)</title><rect x="45.7" y="181" width="0.8" height="15.0" fill="rgb(205,20,15)" rx="2" ry="2" />
<text  x="48.66" y="191.5" ></text>
</g>
<g >
<title>clear_page_rep (6,581,990 samples, 0.07%)</title><rect x="22.5" y="245" width="0.8" height="15.0" fill="rgb(215,0,46)" rx="2" ry="2" />
<text  x="25.47" y="255.5" ></text>
</g>
<g >
<title>seq_printf (24,671,563 samples, 0.28%)</title><rect x="24.2" y="261" width="3.3" height="15.0" fill="rgb(207,167,26)" rx="2" ry="2" />
<text  x="27.21" y="271.5" ></text>
</g>
<g >
<title>show_cpuinfo (24,738,301 samples, 0.28%)</title><rect x="24.2" y="277" width="3.3" height="15.0" fill="rgb(221,201,13)" rx="2" ry="2" />
<text  x="27.20" y="287.5" ></text>
</g>
<g >
<title>uverbs_destroy_ufile_hw (6,552,847 samples, 0.07%)</title><rect x="46.5" y="293" width="0.9" height="15.0" fill="rgb(241,136,28)" rx="2" ry="2" />
<text  x="49.52" y="303.5" ></text>
</g>
<g >
<title>__fput (6,552,847 samples, 0.07%)</title><rect x="46.5" y="325" width="0.9" height="15.0" fill="rgb(234,229,2)" rx="2" ry="2" />
<text  x="49.52" y="335.5" ></text>
</g>
<g >
<title>__uverbs_cleanup_ufile (6,552,847 samples, 0.07%)</title><rect x="46.5" y="277" width="0.9" height="15.0" fill="rgb(217,32,42)" rx="2" ry="2" />
<text  x="49.52" y="287.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (14,162,664 samples, 0.16%)</title><rect x="42.9" y="245" width="1.9" height="15.0" fill="rgb(245,185,4)" rx="2" ry="2" />
<text  x="45.92" y="255.5" ></text>
</g>
<g >
<title>__mm_populate (18,126,144 samples, 0.20%)</title><rect x="36.4" y="341" width="2.3" height="15.0" fill="rgb(240,46,11)" rx="2" ry="2" />
<text  x="39.35" y="351.5" ></text>
</g>
<g >
<title>handle_mm_fault (39,335,213 samples, 0.44%)</title><rect x="39.6" y="325" width="5.2" height="15.0" fill="rgb(230,173,14)" rx="2" ry="2" />
<text  x="42.61" y="335.5" ></text>
</g>
<g >
<title>[unknown] (39,335,213 samples, 0.44%)</title><rect x="39.6" y="421" width="5.2" height="15.0" fill="rgb(247,97,35)" rx="2" ry="2" />
<text  x="42.61" y="431.5" ></text>
</g>
<g >
<title>free_unref_page_list (6,575,998 samples, 0.07%)</title><rect x="45.7" y="213" width="0.8" height="15.0" fill="rgb(213,74,48)" rx="2" ry="2" />
<text  x="48.66" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (14,162,664 samples, 0.16%)</title><rect x="27.5" y="37" width="1.8" height="15.0" fill="rgb(205,163,1)" rx="2" ry="2" />
<text  x="30.46" y="47.5" ></text>
</g>
<g >
<title>__vfscanf_internal (54,356,847 samples, 0.61%)</title><rect x="14.4" y="405" width="7.2" height="15.0" fill="rgb(225,172,24)" rx="2" ry="2" />
<text  x="17.44" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (18,126,144 samples, 0.20%)</title><rect x="12.1" y="373" width="2.3" height="15.0" fill="rgb(229,85,22)" rx="2" ry="2" />
<text  x="15.05" y="383.5" ></text>
</g>
<g >
<title>populate_vma_page_range (18,126,144 samples, 0.20%)</title><rect x="36.4" y="325" width="2.3" height="15.0" fill="rgb(246,112,12)" rx="2" ry="2" />
<text  x="39.35" y="335.5" ></text>
</g>
<g >
<title>mlx5_cmd_exec (14,162,664 samples, 0.16%)</title><rect x="27.5" y="149" width="1.8" height="15.0" fill="rgb(231,35,19)" rx="2" ry="2" />
<text  x="30.46" y="159.5" ></text>
</g>
<g >
<title>ib_uverbs_cmd_verbs (18,126,144 samples, 0.20%)</title><rect x="12.1" y="293" width="2.3" height="15.0" fill="rgb(250,131,11)" rx="2" ry="2" />
<text  x="15.05" y="303.5" ></text>
</g>
<g >
<title>wait_for_completion_timeout (6,552,847 samples, 0.07%)</title><rect x="46.5" y="181" width="0.9" height="15.0" fill="rgb(217,72,51)" rx="2" ry="2" />
<text  x="49.52" y="191.5" ></text>
</g>
<g >
<title>ib_uverbs_handler_UVERBS_METHOD_INVOKE_WRITE (18,126,144 samples, 0.20%)</title><rect x="12.1" y="277" width="2.3" height="15.0" fill="rgb(242,195,21)" rx="2" ry="2" />
<text  x="15.05" y="287.5" ></text>
</g>
<g >
<title>cmd_exec (14,162,664 samples, 0.16%)</title><rect x="27.5" y="133" width="1.8" height="15.0" fill="rgb(207,197,42)" rx="2" ry="2" />
<text  x="30.46" y="143.5" ></text>
</g>
<g >
<title>rte_eth_link_get_nowait (14,162,664 samples, 0.16%)</title><rect x="27.5" y="421" width="1.8" height="15.0" fill="rgb(228,150,11)" rx="2" ry="2" />
<text  x="30.46" y="431.5" ></text>
</g>
<g >
<title>ib_uverbs_close (6,552,847 samples, 0.07%)</title><rect x="46.5" y="309" width="0.9" height="15.0" fill="rgb(212,18,43)" rx="2" ry="2" />
<text  x="49.52" y="319.5" ></text>
</g>
<g >
<title>[unknown] (10,434,085 samples, 0.12%)</title><rect x="10.7" y="405" width="1.4" height="15.0" fill="rgb(247,60,19)" rx="2" ry="2" />
<text  x="13.68" y="415.5" ></text>
</g>
<g >
<title>vfs_read (24,738,301 samples, 0.28%)</title><rect x="24.2" y="341" width="3.3" height="15.0" fill="rgb(241,84,9)" rx="2" ry="2" />
<text  x="27.20" y="351.5" ></text>
</g>
<g >
<title>page_mapping (14,162,664 samples, 0.16%)</title><rect x="42.9" y="197" width="1.9" height="15.0" fill="rgb(247,217,35)" rx="2" ry="2" />
<text  x="45.92" y="207.5" ></text>
</g>
<g >
<title>create_cq (18,126,144 samples, 0.20%)</title><rect x="12.1" y="245" width="2.3" height="15.0" fill="rgb(232,167,9)" rx="2" ry="2" />
<text  x="15.05" y="255.5" ></text>
</g>
<g >
<title>schedule_timeout (6,552,847 samples, 0.07%)</title><rect x="46.5" y="165" width="0.9" height="15.0" fill="rgb(237,90,0)" rx="2" ry="2" />
<text  x="49.52" y="175.5" ></text>
</g>
<g >
<title>mlx5_cmd_exec (6,552,847 samples, 0.07%)</title><rect x="46.5" y="213" width="0.9" height="15.0" fill="rgb(215,219,24)" rx="2" ry="2" />
<text  x="49.52" y="223.5" ></text>
</g>
<g >
<title>page_evictable (14,162,664 samples, 0.16%)</title><rect x="42.9" y="213" width="1.9" height="15.0" fill="rgb(208,182,7)" rx="2" ry="2" />
<text  x="45.92" y="223.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (29,599,543 samples, 0.33%)</title><rect x="32.5" y="421" width="3.9" height="15.0" fill="rgb(237,60,54)" rx="2" ry="2" />
<text  x="35.45" y="431.5" ></text>
</g>
<g >
<title>[libmlx5.so.1.12.28.0] (5,135,846 samples, 0.06%)</title><rect x="10.0" y="421" width="0.7" height="15.0" fill="rgb(221,9,0)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>try_to_wake_up (14,162,664 samples, 0.16%)</title><rect x="27.5" y="53" width="1.8" height="15.0" fill="rgb(234,191,18)" rx="2" ry="2" />
<text  x="30.46" y="63.5" ></text>
</g>
<g >
<title>insert_work (14,162,664 samples, 0.16%)</title><rect x="27.5" y="85" width="1.8" height="15.0" fill="rgb(210,176,44)" rx="2" ry="2" />
<text  x="30.46" y="95.5" ></text>
</g>
<g >
<title>do_syscall_64 (19,705,985 samples, 0.22%)</title><rect x="44.8" y="421" width="2.6" height="15.0" fill="rgb(222,206,8)" rx="2" ry="2" />
<text  x="47.79" y="431.5" ></text>
</g>
<g >
<title>clear_page_rep (18,126,144 samples, 0.20%)</title><rect x="36.4" y="229" width="2.3" height="15.0" fill="rgb(222,82,7)" rx="2" ry="2" />
<text  x="39.35" y="239.5" ></text>
</g>
<g >
<title>devx_obj_cleanup (6,552,847 samples, 0.07%)</title><rect x="46.5" y="229" width="0.9" height="15.0" fill="rgb(222,12,14)" rx="2" ry="2" />
<text  x="49.52" y="239.5" ></text>
</g>
<g >
<title>seq_read (24,738,301 samples, 0.28%)</title><rect x="24.2" y="293" width="3.3" height="15.0" fill="rgb(240,201,33)" rx="2" ry="2" />
<text  x="27.20" y="303.5" ></text>
</g>
<g >
<title>create_cq_user (18,126,144 samples, 0.20%)</title><rect x="12.1" y="213" width="2.3" height="15.0" fill="rgb(213,115,52)" rx="2" ry="2" />
<text  x="15.05" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (14,162,664 samples, 0.16%)</title><rect x="27.5" y="357" width="1.8" height="15.0" fill="rgb(248,53,27)" rx="2" ry="2" />
<text  x="30.46" y="367.5" ></text>
</g>
<g >
<title>[unknown] (170,419,027 samples, 1.90%)</title><rect x="10.0" y="437" width="22.5" height="15.0" fill="rgb(206,83,39)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >[..</text>
</g>
<g >
<title>__mmap (24,710,984 samples, 0.28%)</title><rect x="36.4" y="437" width="3.2" height="15.0" fill="rgb(233,17,38)" rx="2" ry="2" />
<text  x="39.35" y="447.5" ></text>
</g>
<g >
<title>rb_prev (18,126,144 samples, 0.20%)</title><rect x="12.1" y="133" width="2.3" height="15.0" fill="rgb(231,70,49)" rx="2" ry="2" />
<text  x="15.05" y="143.5" ></text>
</g>
<g >
<title>alloc_pages_vma (6,581,990 samples, 0.07%)</title><rect x="22.5" y="293" width="0.8" height="15.0" fill="rgb(212,120,16)" rx="2" ry="2" />
<text  x="25.47" y="303.5" ></text>
</g>
<g >
<title>unmap_page_range (13,153,138 samples, 0.15%)</title><rect x="44.8" y="293" width="1.7" height="15.0" fill="rgb(229,201,49)" rx="2" ry="2" />
<text  x="47.79" y="303.5" ></text>
</g>
<g >
<title>mmput (13,153,138 samples, 0.15%)</title><rect x="44.8" y="357" width="1.7" height="15.0" fill="rgb(231,206,36)" rx="2" ry="2" />
<text  x="47.79" y="367.5" ></text>
</g>
<g >
<title>mlx5_ib_create_cq (18,126,144 samples, 0.20%)</title><rect x="12.1" y="229" width="2.3" height="15.0" fill="rgb(249,1,43)" rx="2" ry="2" />
<text  x="15.05" y="239.5" ></text>
</g>
<g >
<title>destroy_hw_idr_uobject (6,552,847 samples, 0.07%)</title><rect x="46.5" y="245" width="0.9" height="15.0" fill="rgb(222,39,37)" rx="2" ry="2" />
<text  x="49.52" y="255.5" ></text>
</g>
<g >
<title>mlx5e_get_link_ksettings (14,162,664 samples, 0.16%)</title><rect x="27.5" y="229" width="1.8" height="15.0" fill="rgb(235,206,3)" rx="2" ry="2" />
<text  x="30.46" y="239.5" ></text>
</g>
<g >
<title>handle_mm_fault (13,164,317 samples, 0.15%)</title><rect x="21.6" y="341" width="1.7" height="15.0" fill="rgb(249,182,38)" rx="2" ry="2" />
<text  x="24.60" y="351.5" ></text>
</g>
<g >
<title>mlx5_query_port_pause (14,162,664 samples, 0.16%)</title><rect x="27.5" y="197" width="1.8" height="15.0" fill="rgb(244,171,0)" rx="2" ry="2" />
<text  x="30.46" y="207.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (29,599,543 samples, 0.33%)</title><rect x="32.5" y="437" width="3.9" height="15.0" fill="rgb(227,158,28)" rx="2" ry="2" />
<text  x="35.45" y="447.5" ></text>
</g>
<g >
<title>wake_up_process (14,162,664 samples, 0.16%)</title><rect x="27.5" y="69" width="1.8" height="15.0" fill="rgb(226,134,43)" rx="2" ry="2" />
<text  x="30.46" y="79.5" ></text>
</g>
<g >
<title>task_work_run (6,552,847 samples, 0.07%)</title><rect x="46.5" y="357" width="0.9" height="15.0" fill="rgb(219,13,38)" rx="2" ry="2" />
<text  x="49.52" y="367.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (14,162,664 samples, 0.16%)</title><rect x="27.5" y="325" width="1.8" height="15.0" fill="rgb(220,50,44)" rx="2" ry="2" />
<text  x="30.46" y="335.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (13,164,317 samples, 0.15%)</title><rect x="21.6" y="421" width="1.7" height="15.0" fill="rgb(241,205,6)" rx="2" ry="2" />
<text  x="24.60" y="431.5" ></text>
</g>
<g >
<title>mlx5_core_access_reg (14,162,664 samples, 0.16%)</title><rect x="27.5" y="165" width="1.8" height="15.0" fill="rgb(218,222,30)" rx="2" ry="2" />
<text  x="30.46" y="175.5" ></text>
</g>
<g >
<title>follow_hugetlb_page (18,126,144 samples, 0.20%)</title><rect x="36.4" y="293" width="2.3" height="15.0" fill="rgb(211,192,48)" rx="2" ry="2" />
<text  x="39.35" y="303.5" ></text>
</g>
<g >
<title>cmd_exec (6,552,847 samples, 0.07%)</title><rect x="46.5" y="197" width="0.9" height="15.0" fill="rgb(247,58,50)" rx="2" ry="2" />
<text  x="49.52" y="207.5" ></text>
</g>
<g >
<title>schedule (6,552,847 samples, 0.07%)</title><rect x="46.5" y="149" width="0.9" height="15.0" fill="rgb(250,56,45)" rx="2" ry="2" />
<text  x="49.52" y="159.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (13,153,138 samples, 0.15%)</title><rect x="44.8" y="261" width="1.7" height="15.0" fill="rgb(251,92,31)" rx="2" ry="2" />
<text  x="47.79" y="271.5" ></text>
</g>
<g >
<title>ib_uverbs_ioctl (18,126,144 samples, 0.20%)</title><rect x="12.1" y="309" width="2.3" height="15.0" fill="rgb(235,15,47)" rx="2" ry="2" />
<text  x="15.05" y="319.5" ></text>
</g>
<g >
<title>kqueue_kevent (6,576,429 samples, 0.07%)</title><rect x="23.3" y="421" width="0.9" height="15.0" fill="rgb(206,130,11)" rx="2" ry="2" />
<text  x="26.34" y="431.5" ></text>
</g>
<g >
<title>uverbs_destroy_uobject (6,552,847 samples, 0.07%)</title><rect x="46.5" y="261" width="0.9" height="15.0" fill="rgb(212,50,17)" rx="2" ry="2" />
<text  x="49.52" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (24,738,301 samples, 0.28%)</title><rect x="24.2" y="389" width="3.3" height="15.0" fill="rgb(235,13,49)" rx="2" ry="2" />
<text  x="27.20" y="399.5" ></text>
</g>
<g >
<title>____fput (6,552,847 samples, 0.07%)</title><rect x="46.5" y="341" width="0.9" height="15.0" fill="rgb(227,161,1)" rx="2" ry="2" />
<text  x="49.52" y="351.5" ></text>
</g>
<g >
<title>do_anonymous_page (6,581,990 samples, 0.07%)</title><rect x="22.5" y="309" width="0.8" height="15.0" fill="rgb(234,90,42)" rx="2" ry="2" />
<text  x="25.47" y="319.5" ></text>
</g>
<g >
<title>alloc_iova_fast (18,126,144 samples, 0.20%)</title><rect x="12.1" y="149" width="2.3" height="15.0" fill="rgb(217,155,31)" rx="2" ry="2" />
<text  x="15.05" y="159.5" ></text>
</g>
<g >
<title>__GI___ioctl (14,162,664 samples, 0.16%)</title><rect x="27.5" y="405" width="1.8" height="15.0" fill="rgb(241,77,3)" rx="2" ry="2" />
<text  x="30.46" y="415.5" ></text>
</g>
<g >
<title>[libibverbs.so.1.8.28.0] (5,135,846 samples, 0.06%)</title><rect x="10.0" y="405" width="0.7" height="15.0" fill="rgb(225,212,30)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>callout_callwheel_init (39,335,213 samples, 0.44%)</title><rect x="39.6" y="437" width="5.2" height="15.0" fill="rgb(228,163,26)" rx="2" ry="2" />
<text  x="42.61" y="447.5" ></text>
</g>
<g >
<title>clear_huge_page (18,126,144 samples, 0.20%)</title><rect x="36.4" y="245" width="2.3" height="15.0" fill="rgb(212,178,52)" rx="2" ry="2" />
<text  x="39.35" y="255.5" ></text>
</g>
<g >
<title>hugetlb_fault (18,126,144 samples, 0.20%)</title><rect x="36.4" y="277" width="2.3" height="15.0" fill="rgb(208,91,41)" rx="2" ry="2" />
<text  x="39.35" y="287.5" ></text>
</g>
<g >
<title>ksys_ioctl (18,126,144 samples, 0.20%)</title><rect x="12.1" y="341" width="2.3" height="15.0" fill="rgb(211,163,4)" rx="2" ry="2" />
<text  x="15.05" y="351.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (24,710,984 samples, 0.28%)</title><rect x="36.4" y="373" width="3.2" height="15.0" fill="rgb(227,165,44)" rx="2" ry="2" />
<text  x="39.35" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (24,710,984 samples, 0.28%)</title><rect x="36.4" y="389" width="3.2" height="15.0" fill="rgb(253,74,15)" rx="2" ry="2" />
<text  x="39.35" y="399.5" ></text>
</g>
<g >
<title>__isoc99_sscanf (54,356,847 samples, 0.61%)</title><rect x="14.4" y="421" width="7.2" height="15.0" fill="rgb(225,124,21)" rx="2" ry="2" />
<text  x="17.44" y="431.5" ></text>
</g>
<g >
<title>mlx5_rx_burst_vec (13,152,189 samples, 0.15%)</title><rect x="51.7" y="437" width="1.8" height="15.0" fill="rgb(227,81,51)" rx="2" ry="2" />
<text  x="54.72" y="447.5" ></text>
</g>
<g >
<title>sock_do_ioctl (14,162,664 samples, 0.16%)</title><rect x="27.5" y="293" width="1.8" height="15.0" fill="rgb(247,127,37)" rx="2" ry="2" />
<text  x="30.46" y="303.5" ></text>
</g>
<g >
<title>ksys_ioctl (14,162,664 samples, 0.16%)</title><rect x="27.5" y="341" width="1.8" height="15.0" fill="rgb(234,42,14)" rx="2" ry="2" />
<text  x="30.46" y="351.5" ></text>
</g>
<g >
<title>dev_ioctl (14,162,664 samples, 0.16%)</title><rect x="27.5" y="277" width="1.8" height="15.0" fill="rgb(208,133,39)" rx="2" ry="2" />
<text  x="30.46" y="287.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (13,439,737 samples, 0.15%)</title><rect x="39.6" y="261" width="1.8" height="15.0" fill="rgb(237,110,7)" rx="2" ry="2" />
<text  x="42.61" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (24,710,984 samples, 0.28%)</title><rect x="36.4" y="421" width="3.2" height="15.0" fill="rgb(242,208,11)" rx="2" ry="2" />
<text  x="39.35" y="431.5" ></text>
</g>
<g >
<title>proc_reg_read (24,738,301 samples, 0.28%)</title><rect x="24.2" y="309" width="3.3" height="15.0" fill="rgb(219,212,42)" rx="2" ry="2" />
<text  x="27.20" y="319.5" ></text>
</g>
<g >
<title>__do_page_fault (13,164,317 samples, 0.15%)</title><rect x="21.6" y="373" width="1.7" height="15.0" fill="rgb(224,103,14)" rx="2" ry="2" />
<text  x="24.60" y="383.5" ></text>
</g>
<g >
<title>page_fault (13,164,317 samples, 0.15%)</title><rect x="21.6" y="405" width="1.7" height="15.0" fill="rgb(221,90,32)" rx="2" ry="2" />
<text  x="24.60" y="415.5" ></text>
</g>
<g >
<title>do_exit (19,705,985 samples, 0.22%)</title><rect x="44.8" y="373" width="2.6" height="15.0" fill="rgb(220,225,6)" rx="2" ry="2" />
<text  x="47.79" y="383.5" ></text>
</g>
<g >
<title>do_user_addr_fault (39,335,213 samples, 0.44%)</title><rect x="39.6" y="341" width="5.2" height="15.0" fill="rgb(218,191,0)" rx="2" ry="2" />
<text  x="42.61" y="351.5" ></text>
</g>
<g >
<title>cap_mmap_file (6,584,840 samples, 0.07%)</title><rect x="38.7" y="341" width="0.9" height="15.0" fill="rgb(206,137,40)" rx="2" ry="2" />
<text  x="41.74" y="351.5" ></text>
</g>
<g >
<title>fget_unlocked (6,573,139 samples, 0.07%)</title><rect x="47.4" y="437" width="0.9" height="15.0" fill="rgb(253,65,39)" rx="2" ry="2" />
<text  x="50.39" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (24,710,984 samples, 0.28%)</title><rect x="36.4" y="405" width="3.2" height="15.0" fill="rgb(213,178,4)" rx="2" ry="2" />
<text  x="39.35" y="415.5" ></text>
</g>
<g >
<title>__accumulate_pelt_segments (6,552,847 samples, 0.07%)</title><rect x="46.5" y="69" width="0.9" height="15.0" fill="rgb(245,28,46)" rx="2" ry="2" />
<text  x="49.52" y="79.5" ></text>
</g>
<g >
<title>clear_page_rep (13,439,737 samples, 0.15%)</title><rect x="39.6" y="229" width="1.8" height="15.0" fill="rgb(230,212,2)" rx="2" ry="2" />
<text  x="42.61" y="239.5" ></text>
</g>
<g >
<title>do_page_fault (13,164,317 samples, 0.15%)</title><rect x="21.6" y="389" width="1.7" height="15.0" fill="rgb(250,193,40)" rx="2" ry="2" />
<text  x="24.60" y="399.5" ></text>
</g>
<g >
<title>hugetlb_no_page (18,126,144 samples, 0.20%)</title><rect x="36.4" y="261" width="2.3" height="15.0" fill="rgb(242,227,0)" rx="2" ry="2" />
<text  x="39.35" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (19,705,985 samples, 0.22%)</title><rect x="44.8" y="437" width="2.6" height="15.0" fill="rgb(229,98,51)" rx="2" ry="2" />
<text  x="47.79" y="447.5" ></text>
</g>
<g >
<title>main_loop (26,305,903 samples, 0.29%)</title><rect x="48.3" y="437" width="3.4" height="15.0" fill="rgb(230,103,50)" rx="2" ry="2" />
<text  x="51.25" y="447.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (13,153,138 samples, 0.15%)</title><rect x="44.8" y="245" width="1.7" height="15.0" fill="rgb(212,174,14)" rx="2" ry="2" />
<text  x="47.79" y="255.5" ></text>
</g>
<g >
<title>[unknown] (28,560,229 samples, 0.32%)</title><rect x="10.7" y="421" width="3.7" height="15.0" fill="rgb(211,169,38)" rx="2" ry="2" />
<text  x="13.68" y="431.5" ></text>
</g>
<g >
<title>release_pages (6,575,998 samples, 0.07%)</title><rect x="45.7" y="229" width="0.8" height="15.0" fill="rgb(238,46,46)" rx="2" ry="2" />
<text  x="48.66" y="239.5" ></text>
</g>
<g >
<title>exit_mmap (13,153,138 samples, 0.15%)</title><rect x="44.8" y="341" width="1.7" height="15.0" fill="rgb(228,32,12)" rx="2" ry="2" />
<text  x="47.79" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14,162,664 samples, 0.16%)</title><rect x="27.5" y="389" width="1.8" height="15.0" fill="rgb(205,213,53)" rx="2" ry="2" />
<text  x="30.46" y="399.5" ></text>
</g>
<g >
<title>do_user_addr_fault (13,164,317 samples, 0.15%)</title><rect x="21.6" y="357" width="1.7" height="15.0" fill="rgb(232,176,6)" rx="2" ry="2" />
<text  x="24.60" y="367.5" ></text>
</g>
<g >
<title>get_page_from_freelist (6,581,990 samples, 0.07%)</title><rect x="22.5" y="261" width="0.8" height="15.0" fill="rgb(212,63,30)" rx="2" ry="2" />
<text  x="25.47" y="271.5" ></text>
</g>
<g >
<title>__GI___ioctl (18,126,144 samples, 0.20%)</title><rect x="12.1" y="405" width="2.3" height="15.0" fill="rgb(238,157,41)" rx="2" ry="2" />
<text  x="15.05" y="415.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (6,581,990 samples, 0.07%)</title><rect x="22.5" y="277" width="0.8" height="15.0" fill="rgb(244,8,53)" rx="2" ry="2" />
<text  x="25.47" y="287.5" ></text>
</g>
<g >
<title>ethtool_get_link_ksettings (14,162,664 samples, 0.16%)</title><rect x="27.5" y="245" width="1.8" height="15.0" fill="rgb(218,195,52)" rx="2" ry="2" />
<text  x="30.46" y="255.5" ></text>
</g>
<g >
<title>do_group_exit (19,705,985 samples, 0.22%)</title><rect x="44.8" y="389" width="2.6" height="15.0" fill="rgb(212,117,8)" rx="2" ry="2" />
<text  x="47.79" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (14,162,664 samples, 0.16%)</title><rect x="27.5" y="373" width="1.8" height="15.0" fill="rgb(235,122,53)" rx="2" ry="2" />
<text  x="30.46" y="383.5" ></text>
</g>
<g >
<title>do_anonymous_page (39,335,213 samples, 0.44%)</title><rect x="39.6" y="293" width="5.2" height="15.0" fill="rgb(234,220,39)" rx="2" ry="2" />
<text  x="42.61" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18,126,144 samples, 0.20%)</title><rect x="12.1" y="389" width="2.3" height="15.0" fill="rgb(229,193,49)" rx="2" ry="2" />
<text  x="15.05" y="399.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (18,126,144 samples, 0.20%)</title><rect x="12.1" y="325" width="2.3" height="15.0" fill="rgb(214,94,16)" rx="2" ry="2" />
<text  x="15.05" y="335.5" ></text>
</g>
</g>
</svg>
